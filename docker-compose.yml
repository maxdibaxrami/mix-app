version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    env_file:
      - .env  # Use the root .env file for database variables

  nestjs-app:
    build:
      context: ./nestjs-app  # Path to your NestJS app
    container_name: nestjs_app
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
    networks:
      - app_network
    volumes:
      - ./nestjs-app:/usr/src/app  # Mount NestJS app directory
      - ./uploads:/usr/src/app/uploads
    working_dir: /usr/src/app
    command: npm run start:dev
    env_file:
      - ./nestjs-app/.env  # Reference the .env inside the NestJS app directory

  react-app:
    build:
      context: ./react-app  # Path to your React app
    container_name: react_app
    ports:
      - "80:80"
    networks:
      - app_network
    depends_on:
      - nestjs-app
    volumes:
      - ./react-app:/usr/share/nginx/html
    command: ["nginx", "-g", "daemon off;"]

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
