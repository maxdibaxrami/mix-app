version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    env_file:
      - .env

  nestjs-app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nestjs_app
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      NODE_ENV: production
    networks:
      - app_network
    volumes:
      - ./backend/uploads:/usr/src/app/uploads
    command: npm run start:prod
    env_file:
      - ./backend/.env

  react-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8081:80"
    depends_on:
      - nestjs-app
    networks:
      - app_network
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist:/usr/share/nginx/html
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 10s
      retries: 3

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile  # Nginx Dockerfile to manage configurations and SSL
    container_name: nginx
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist:/usr/share/nginx/html

    depends_on:
      - react-app
      - nestjs-app
    networks:
      - app_network
    restart: always

volumes:
  postgres_data:
  react_build:
  nginx_ssl:
    external: false

networks:
  app_network:
    driver: bridge
