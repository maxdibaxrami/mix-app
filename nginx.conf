events {}

http {
  upstream frontend {
    server react-app:80;  # Refers to the "react-app" service in docker-compose
  }

  upstream backend {
    server nestjs-app:3000;  # Refers to the "nestjs-app" service in docker-compose
  }

  # HTTP server (Redirect to HTTPS)
  server {
    listen 80;
    server_name copychic.online;  # Replace with your domain

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
  }

  # HTTPS server
  server {
    listen 443 ssl;
    server_name copychic.online;  # Replace with your domain

    ssl_certificate /etc/nginx/ssl/certificate.crt;
    ssl_certificate_key /etc/nginx/ssl/certificate.key;
        
    # SSL settings for security
    ssl_protocols TLSv1.2 TLSv1.3;  # Allow only secure protocols
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # Serve the frontend (React app)
    location / {
      root /usr/share/nginx/html;  # Serve the React build directory
      try_files $uri /index.html;  # Fallback to index.html for React routing
    }

    # Proxy API requests to the backend (NestJS)
    location /api/ {
      proxy_pass http://backend;  # Proxy to the NestJS backend
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # WebSocket support for API
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    # Set timeouts and buffer for better performance
    client_max_body_size 100M;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    send_timeout 60s;

    # Caching for static assets
    location ~* \.(?:css|js|woff2?|svg|eot|ttf|otf|png|jpg|jpeg|gif|ico|webp|json)$ {
      expires 1y;
      access_log off;
    }

    # Security headers
    add_header X-Content-Type-Options "nosniff";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Logging for access and errors
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
  }
}
